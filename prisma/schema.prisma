// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id             String   @id @default(uuid())
  email          String   @unique
  username       String   @unique
  hashedPassword String   @unique
  files          File[]
  folders        Folder[]
  memoryUsedKB   BigInt   @default(0)
}

model File {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  type      String
  owner     User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String
  downloads Int      @default(0)
  sizeKB    BigInt   @default(0)

  deleted   Boolean   @default(false)
  deletedAt DateTime?

  parentFolder   Folder @relation(fields: [parentFolderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  parentFolderId String
}

model Folder {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sizeKB    BigInt   @default(0)

  isRoot  Boolean @default(false)
  isTrash Boolean @default(false)

  deleted   Boolean   @default(false)
  deletedAt DateTime?

  files File[]

  parentFolder   Folder?  @relation("ParentChild", fields: [parentFolderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  parentFolderId String?
  childFolders   Folder[] @relation("ParentChild")

  owner  User   @relation(fields: [userId], references: [id])
  userId String
}
