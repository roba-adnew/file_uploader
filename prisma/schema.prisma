// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  userId    String
  data      String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
}

model User {
  id             String    @id @default(uuid())
  email          String    @unique
  username       String    @unique
  hashedPassword String    @unique
  Files          File[]
  memoryUsedMB   Float     @default(0)
  Session        Session[]
}

model File {
  id         String   @id @default(uuid())
  name       String
  folderPath String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  type       Type
  owner      User     @relation(fields: [userId], references: [id])
  userId     String
  downloads  Int
  deleted    Boolean  @default(false)
  deletedAt  DateTime
}

enum Type {
  DOC
  XLS
  PNG
}

model Folder {
  id        String   @id @default(uuid())
  name      String
  path      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  fileCount   Int @default(0)
  folderCount Int @default(0)

  deleted   Boolean  @default(false)
  deletedAt DateTime

  parent   Folder?  @relation("ParentChild", fields: [parentId], references: [id])
  parentId String?
  children Folder[] @relation("ParentChild")

  @@unique([name, path])
}
